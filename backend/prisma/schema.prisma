// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  first_name     String?
  last_name      String?
  email          String    @unique
  password       String
  role           Role      @default(STUDENT)
  about          String?
  institute      String?
  designation    String?
  country        String?
  city           String?
  socials        Json?
  gender         Gender?   @default(DONT_DISCLOSE)
  profile_pic    String?   @default("")
  isBlocked      Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  courses        Courses[] @relation("Enrollments") // Students can enroll in multiple courses
  coursesCreated Courses[] @relation("CreatedBy") // Teachers can create multiple courses
}

model Courses {
  id                String        @id @default(uuid())
  title             String
  short_description String
  description       String
  category          String
  total_hours       Int?
  course_status     Course_Status @default(PROCESSING)
  participants      Int?          @default(0)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  teacher           User          @relation("CreatedBy", fields: [teacherId], references: [id])
  teacherId         String
  students          User[]        @relation("Enrollments") // Course can have multiple enrolled students
  lessons           Lessons[] // One-to-many relationship with Lessions
}

model Lessons {
  id          String     @id @default(uuid())
  title       String
  description String
  courseId    String // Foreign key referencing the Courses table
  course      Courses    @relation(fields: [courseId], references: [id])
  contents    Contents[]
  quiz        Quiz[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Contents {
  id        String   @id @default(uuid())
  title     String
  file      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Lessons   Lessons? @relation(fields: [lessonsId], references: [id])
  lessonsId String?
}

model Quiz {
  id        String   @id @default(uuid())
  title     String
  questions Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lessons   Lessons? @relation(fields: [lessonsId], references: [id])
  lessonsId String?
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHERS
  DONT_DISCLOSE
}

enum Course_Status {
  ACTIVE
  PROCESSING
}
